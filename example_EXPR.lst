0000-                  4               .sf example_EXPR.sym
0000-                  5               .in ca80.inc
0000-            I     1                               ; ciagle uzupelniam ...
00E0-            I     2       USER8255        .eq             $E0
0000-            I     3       PA                      .eq             0
0001-            I     4       PB                      .eq             1
0002-            I     5       PC                      .eq             2
0003-            I     6       CTRL            .eq             3
0000-            I     7                               ;
FFF7-            I     8       CYF0        .eq $FFF7
FFF8-            I     9       CYF1        .eq $FFF8
FFF9-            I    10       CYF2        .eq $FFF9
FFFA-            I    11       CYF3        .eq $FFFA
FFFB-            I    12       CYF4        .eq $FFFB
FFFC-            I    13       CYF5        .eq $FFFC
FFFD-            I    14       CYF6        .eq $FFFD
FFFE-            I    15       CYF7        .eq $FFFE
0000-            I    16
0010-            I    17       CLR                 .eq $0010   ; CLR - kasowanie wyswietlacza
0018-            I    18       LBYTE       .eq $0018   ; LBYTE - wyswietlenie Aku w HEX
0020-            I    19       LADR        .eq $0020   ; LADR - wyswietlenie HL w HEX
022D-            I    20       CZAS        .eq $022D   ; CZAS - pokazuje czas/date
01AB-            I    21       COM                 .eq $01AB   ; COM - pokazuje znak 7-seg z rejestru C
01D4-            I    22       PRINT       .eq $01D4   ; PRINT - drukuje komunikat z (HL)
0213-            I    23       EXPR        .eq $0213   ; EXPR - pobranie ciagu liczb 16bit na stos
FFC3-            I    24       CSTS        .eq $FFC3   ; CSTS - test czy klawisz nacisniety
FFC6-            I    25       CI          .eq $FFC6   ; CI - pobranie znaku z klawiatury
01E0-            I    26       CO          .eq $01E0   ; CO - wyswietlenie cyfry hex
0007-            I    27       TI          .eq $0007   ; TI - pobranie znaku z echem
01F4-            I    28       PARAM       .eq $01F4   ; PARAM - pobranie liczby 16-bit do HL z echem
0000-            I    29                   ;
00FF-            I    30       EOM         .eq $FF
0000-            I    31
0000-            I    32
0000-                  6               .in utilities.inc           ; wszelkie przydasie
0000-            I     1                       ;
0000-            I     2       ADDR_LO         .eq 0
0001-            I     3       ADDR_HI         .eq 1
0000-            I     4                       ;
0000-            I     5                       ;--------------------------------------------
0000-            I     6                       ;  makra dla tabel
0000-            I     7       BEGINARRAY      .MA   arrayName
0000-            I     8       ]1:
0000-            I     9                                       .EM
0000-            I    10                                       ;
0000-            I    11       ENDARRAY        .MA   arrayName,itemSize
0000-            I    12       ]1End:
0000-            I    13       ]1Size                  .eq      ]1End-]1
0000-            I    14       ]1Count                 .eq      ]1Size/]2
0000-            I    15       ]1Last          .eq  ]1End-]2
0000-            I    16                                       .EM
0000-            I    17                       ;
0000-            I    18                       ;--------------------------------------------
0000-            I    19                       ;
0000-                  7               .sm code                    ;
C000-                  8               .or $c000                   ; U12/C000
C000-                  9               ;
C000-31 66 FF         10 ( 10)                 ld  SP,$ff66                ;
C003-                 11       .begin
C003-21 50 C0         12 ( 10)         ld HL,paramPrompt            ; "PAr=____"
C006-CD D4 01         13 ( 17)         call PRINT
C009-80               14               .db $80                     ; pokaż po lewo
C00A-0E 04            15 (  7)         ld C,parametersArrayCount   ; tyle parametrów ile elementów tabelki
C00C-CD 13 02         16 ( 17)         call EXPR
C00F-40               17               .db $40
C010-                 18               ; pozdejmuj ze stosu i poukładaj w tabeli parametrów
C010-                 19               ; na wierzchołku stosu jest OSTATNIO wprowadzony parametr
C010-06 04            20 (  7)         ld B,parametersArrayCount
C012-DD 21 06 80      21 ( 14)         ld IX,parametersArrayLast
C016-                 22       .saveParams:
C016-E1               23 ( 10)         pop HL
C017-DD 75 00         24 ( 19)         ld (IX+ADDR_LO),L
C01A-DD 74 01         25 ( 19)         ld (IX+ADDR_HI),H
C01D-DD 2B            26 ( 10)         dec IX
C01F-DD 2B            27 ( 10)         dec IX          ; IX := IX-2
C021-10 F3            28 ( 8+)         djnz .saveParams
C023-                 29               ;
C023-                 30               ;prezentacja zgromadzonych parametrów
C023-                 31       .showLoop:
C023-06 04            32 (  7)         ld B,parametersArrayCount
C025-                 33       .showParams:
C025-0E 73            34 (  7)         ld      C,$73       ; "P"
C027-CD AB 01         35 ( 17)         call    COM
C02A-17               36               .db     $17         ; po lewo
C02B-3E 04            37 (  7)         ld      A,parametersArrayCount
C02D-90               38 (  4)         sub     B           ; numer parametru (rosnąco)
C02E-F5               39 ( 11)         push    AF          ; zachowaj A
C02F-3C               40 (  4)         inc     A           ; A+1, aby pokazywać od 1, jak dla ludzi
C030-CD 18 00         41 ( 17)         call    LBYTE       ; dopisz za "P"
C033-25               42               .db     $25         ; też po lewo
C034-                 43               ; ustal adres parametru na podstawie numeru
C034-F1               44 ( 10)         pop     AF          ; mamy stare A z numerem parametru
C035-21 00 80         45 ( 10)         ld HL,parametersArray ; i adres początku tabeli
C038-87               46 (  4)         add     A           ; A*2
C039-85               47 (  4)         add     A,L
C03A-6F               48 (  4)         ld      L,A         ; w HL adres parametru
C03B-E5               49 ( 11)         push    HL          ; dziki transfer
C03C-DD E1            50 ( 14)         pop     IX
C03E-DD 6E 00         51 ( 19)         LD      L,(IX+ADDR_LO)  ; pozyskaj z pamięci
C041-DD 66 01         52 ( 19)         LD      H,(IX+ADDR_HI)
C044-CD 20 00         53 ( 17)         call    LADR            ; pokaż po prawo
C047-40               54               .db     $40
C048-CD 59 C0         55 ( 17)         call    delay
C04B-10 D8            56 ( 8+)         djnz    .showParams         ; while (--B)
C04D-                 57               ;
C04D-C3 23 C0         58 ( 10)         jp      .showLoop
C050-                 59               ;
C050-                 60       paramPrompt:
C050-73 77 50 48 
     00 00 00 00 
     FF               61               .db $73,$77,$50,$48,$00,$00,$00,$00,EOM
C059-                 62               ;
C059-C5               63 ( 11) delay:  push    BC
C05A-F5               64 ( 11)         push    AF
C05B-06 FF            65 (  7)         ld      B,$FF
C05D-                 66       .delay
C05D-76               67 (  4)         halt            ; 2ms
C05E-10 FD            68 ( 8+)         djnz    .delay  ; while( --B )
C060-F1               69 ( 10)         pop     AF
C061-C1               70 ( 10)         pop     BC
C062-C9               71 ( 10)         ret
C063-                 72               ;
C063-                 73               ; zmienne
0000-                 74               .sm RAM
8000-                 75               .or $8000
8000-                 76               >BEGINARRAY parametersArray
8000-             M    1       parametersArray:
8000-                 77               .bs 2
8002-                 78               .bs 2
8004-                 79               .bs 2
8006-                 80               .bs 2
8008-                 81               >ENDARRAY parametersArray,2
8008-             M    1       parametersArrayEnd:
0008-             M    2       parametersArraySize                  .eq      parametersArrayEnd-parametersArray
0004-             M    3       parametersArrayCount                 .eq      parametersArraySize/2
8006-             M    4       parametersArrayLast          .eq  parametersArrayEnd-2
8008-                 82               ;
8008-                 83                       ;
8008-                 84
