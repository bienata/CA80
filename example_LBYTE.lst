0000-                  4               .sf example_LBYTE.sym
0000-                  5               .in ca80.inc
0000-            I     1                               ; ciagle uzupelniam ...
00E0-            I     2       USER8255        .eq             $E0
0000-            I     3       PA                      .eq             0
0001-            I     4       PB                      .eq             1
0002-            I     5       PC                      .eq             2
0003-            I     6       CTRL            .eq             3
0000-            I     7                               ;
FFF7-            I     8       CYF0        .eq $FFF7
FFF8-            I     9       CYF1        .eq $FFF8
FFF9-            I    10       CYF2        .eq $FFF9
FFFA-            I    11       CYF3        .eq $FFFA
FFFB-            I    12       CYF4        .eq $FFFB
FFFC-            I    13       CYF5        .eq $FFFC
FFFD-            I    14       CYF6        .eq $FFFD
FFFE-            I    15       CYF7        .eq $FFFE
0000-            I    16
0010-            I    17       CLR                 .eq $0010   ; CLR - kasowanie wyswietlacza
0018-            I    18       LBYTE       .eq $0018   ; LBYTE - wyswietlenie Aku w HEX
0020-            I    19       LADR        .eq $0020   ; LADR - wyswietlenie HL w HEX
022D-            I    20       CZAS        .eq $022D   ; CZAS - pokazuje czas/date
01AB-            I    21       COM                 .eq $01AB   ; COM - pokazuje znak 7-seg z rejestru C
01D4-            I    22       PRINT       .eq $01D4   ; PRINT - drukuje komunikat z (HL)
0213-            I    23       EXPR        .eq $0213   ; EXPR - pobranie ciagu liczb 16bit na stos
FFC3-            I    24       CSTS        .eq $FFC3   ; CSTS - test czy klawisz nacisniety
FFC6-            I    25       CI          .eq $FFC6   ; CI - pobranie znaku z klawiatury
01E0-            I    26       CO          .eq $01E0   ; CO - wyswietlenie cyfry hex
0000-            I    27                   ;
00FF-            I    28       EOM         .eq $FF
0000-            I    29
0000-            I    30
0000-                  6               .sm code                ;
C000-                  7               .or $c000               ; U12/C000
C000-31 66 FF          8 ( 10)                 ld  SP,$ff66                ;
C003-                  9                       ;
C003-                 10       .begin
C003-06 10            11 (  7)                 ld B,bytesTableLength   ; B-licznik elementów tabeli
C005-21 16 C0         12 ( 10)                 ld HL,bytesTable        ; adres tabeli bajtow
C008-                 13       .loop
C008-7E               14 (  7)                 ld A,(HL)                       ; wez element tabeli
C009-CD 18 00         15 ( 17)                 call LBYTE                  ; pokaż wartość
C00C-20               16                       .db $20                     ; pozycja prawa skrajna
C00D-CD 26 C0         17 ( 17)                 call delay                  ; opóznienie
C010-23               18 (  6)                 inc HL                      ; indeks++
C011-10 F5            19 ( 8+)                 djnz .loop                  ; while (--licznik)
C013-C3 03 C0         20 ( 10)                 jp .begin
C016-                 21               ;
C016-                 22       bytesTable:
C016-00 11 22 33 
     44 55 66 77      23               .db $00,$11,$22,$33,$44,$55,$66,$77
C01E-88 99 AA BB 
     CC DD EE FF      24               .db $88,$99,$aa,$bb,$cc,$dd,$ee,$ff
0010-                 25       bytesTableLength    .eq $-bytesTable
C026-                 26               ;
C026-C5               27 ( 11) delay:  push    BC
C027-F5               28 ( 11)         push    AF
C028-06 50            29 (  7)         ld      B,$50
C02A-                 30       .delay
C02A-76               31 (  4)         halt            ; 2ms
C02B-10 FD            32 ( 8+)         djnz    .delay  ; while( --B )
C02D-F1               33 ( 10)         pop     AF
C02E-C1               34 ( 10)         pop     BC
C02F-C9               35 ( 10)         ret
C030-                 36
C030-                 37                       ;
C030-                 38
