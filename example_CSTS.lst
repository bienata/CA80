0000-                  4               .sf example_CSTS.sym
0000-                  5               .in ca80.inc
0000-            I     1                               ; ciagle uzupelniam ...
00E0-            I     2       USER8255        .eq             $E0
0000-            I     3       PA                      .eq             0
0001-            I     4       PB                      .eq             1
0002-            I     5       PC                      .eq             2
0003-            I     6       CTRL            .eq             3
0000-            I     7                               ;
FFF7-            I     8       CYF0        .eq $FFF7
FFF8-            I     9       CYF1        .eq $FFF8
FFF9-            I    10       CYF2        .eq $FFF9
FFFA-            I    11       CYF3        .eq $FFFA
FFFB-            I    12       CYF4        .eq $FFFB
FFFC-            I    13       CYF5        .eq $FFFC
FFFD-            I    14       CYF6        .eq $FFFD
FFFE-            I    15       CYF7        .eq $FFFE
0000-            I    16
0010-            I    17       CLR                 .eq $0010   ; CLR - kasowanie wyswietlacza
0018-            I    18       LBYTE       .eq $0018   ; LBYTE - wyswietlenie Aku w HEX
0020-            I    19       LADR        .eq $0020   ; LADR - wyswietlenie HL w HEX
022D-            I    20       CZAS        .eq $022D   ; CZAS - pokazuje czas/date
01AB-            I    21       COM                 .eq $01AB   ; COM - pokazuje znak 7-seg z rejestru C
01D4-            I    22       PRINT       .eq $01D4   ; PRINT - drukuje komunikat z (HL)
0213-            I    23       EXPR        .eq $0213   ; EXPR - pobranie ciagu liczb 16bit na stos
FFC3-            I    24       CSTS        .eq $FFC3   ; CSTS - test czy klawisz nacisniety
FFC6-            I    25       CI          .eq $FFC6   ; CI - pobranie znaku z klawiatury
01E0-            I    26       CO          .eq $01E0   ; CO - wyswietlenie cyfry hex
0000-            I    27                   ;
00FF-            I    28       EOM         .eq $FF
0000-            I    29
0000-            I    30
0000-                  6               .sm code                    ;
C000-                  7               .or $c000                   ; U12/C000
C000-31 66 FF          8 ( 10)                 ld  SP,$ff66                ;
C003-                  9                       ;
C003-                 10       .begin
C003-21 37 C0         11 ( 10)         ld HL, welcomeMessage       ; ------
C006-CD D4 01         12 ( 17)                 call PRINT                  ; pokaż
C009-80               13                       .db $80                     ; na cały wyświetlacz
C00A-CD C3 FF         14 ( 17)         call CSTS                   ; sprawdz klawisze
C00D-30 F4            15 ( 7+)         jr  NC,.begin               ; czekaj dalej
C00F-                 16                       ; w A kod klawisza
C00F-FE 0C            17 (  7)                 cp  $C
C011-CC 20 C0         18 (10+)                 call Z,whenCKeyPressed      ; dla C
C014-FE 0D            19 (  7)                 cp  $D
C016-CC 25 C0         20 (10+)                 call Z,whenDKeyPressed      ; D
C019-FE 0E            21 (  7)         cp  $E
C01B-CC 2A C0         22 (10+)         call Z,whenEKeyPressed      ; E
C01E-18 E3            23 ( 12)         jr .begin                   ; powtarzaj
C020-                 24                       ;
C020-                 25       whenCKeyPressed:
C020-21 40 C0         26 ( 10)         ld HL, keyCmessage          ; właściwy komunikat
C023-18 08            27 ( 12)         jr whenPressedCommon        ; do cześci wspólnej
C025-                 28       whenDKeyPressed:
C025-21 49 C0         29 ( 10)         ld HL, keyDmessage
C028-18 03            30 ( 12)         jr whenPressedCommon
C02A-                 31       whenEKeyPressed:
C02A-21 52 C0         32 ( 10)         ld HL, keyEmessage
C02D-                 33       whenPressedCommon:
C02D-CD D4 01         34 ( 17)         call PRINT
C030-80               35               .db $80
C031-                 36       .waitRelease:
C031-CD C3 FF         37 ( 17)         call CSTS
C034-38 FB            38 ( 7+)         jr C,.waitRelease
C036-C9               39 ( 10)         ret
C037-                 40               ;
C037-                 41       welcomeMessage:
C037-80 80 80 80 
     80 80 80 80 
     FF               42               .db     $80,$80,$80,$80,$80,$80,$80,$80, EOM
C040-                 43       keyCmessage:
C040-01 01 01 01 
     01 01 01 01 
     FF               44               .db     $01,$01,$01,$01,$01,$01,$01,$01, EOM
C049-                 45       keyDmessage:
C049-40 40 40 40 
     40 40 40 40 
     FF               46               .db     $40,$40,$40,$40,$40,$40,$40,$40, EOM
C052-                 47       keyEmessage:
C052-08 08 08 08 
     08 08 08 08 
     FF               48               .db     $08,$08,$08,$08,$08,$08,$08,$08, EOM
C05B-                 49               ;
C05B-C5               50 ( 11) delay:  push    BC
C05C-F5               51 ( 11)         push    AF
C05D-06 FF            52 (  7)         ld      B,$FF
C05F-                 53       .delay
C05F-76               54 (  4)         halt            ; 2ms
C060-10 FD            55 ( 8+)         djnz    .delay  ; while( --B )
C062-F1               56 ( 10)         pop     AF
C063-C1               57 ( 10)         pop     BC
C064-C9               58 ( 10)         ret
C065-                 59
C065-                 60                       ;
C065-                 61
